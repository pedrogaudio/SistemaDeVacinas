/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Objects;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sistemadevacinas.Consulta;
import sistemadevacinas.Data;
import sistemadevacinas.Endereco;
import sistemadevacinas.Enfermeira;
import sistemadevacinas.Medico;
import sistemadevacinas.Paciente;
import sistemadevacinas.Pessoa;

/**
 *
 * @author Pedro Gaudio
 */
public class AreaOperacional extends javax.swing.JFrame {

    JOptionPane optionPane = new JOptionPane();

    //deve ter um jeito mais certo de fazer, mas sou burro... pego a variavel que recebo do outro frame e seto aqui
    Pessoa pp = new Pessoa();
    Paciente pMemoria = new Paciente();
    Consulta consMemoria = new Consulta();
    Consulta cDumby = new Consulta();

    /**
     * Creates new form AreaOperacional
     */
    public AreaOperacional() {
        initComponents();
    }

    public AreaOperacional(Pessoa p1, int perfil) {
        initComponents();
        inicializaComponentes(perfil, p1, cDumby);
        // aqui continuo a gambiarra kkk
        pp = p1;
    }

    public AreaOperacional(Pessoa p1, int perfil, Paciente pac, Consulta c) {
        initComponents();
        inicializaComponentes(perfil, p1, c);
        // aqui continuo a gambiarra kkk
        pp = p1;
        populaPacientes(pac, perfil);
        consMemoria = c;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNomePaciente = new javax.swing.JTextField();
        lblValidaConsultaMarcada = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblCartaoAgendamento = new javax.swing.JLabel();
        lblCartaoSus = new javax.swing.JLabel();
        txtCartaoAgendamento = new javax.swing.JTextField();
        txtCartaoSUS = new javax.swing.JTextField();
        dcDataDaConsulta = new com.toedter.calendar.JDateChooser();
        btnVoltar = new javax.swing.JButton();
        btnMarcaConsulta = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblBoasVindas = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cbPaciente = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        cbVacinas = new javax.swing.JComboBox<>();
        btnConcluiPrescriscao = new javax.swing.JButton();
        btnAdicionaVacina = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstVacinasPreescritas = new javax.swing.JList<>();
        jLabel6 = new javax.swing.JLabel();
        btnVoltar1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtNomeVacina = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cbPaciente2 = new javax.swing.JComboBox<>();
        btnAplicarVacina = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        lblIdaide = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        jLabel5.setText("jLabel5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setToolTipText("");
        jTabbedPane1.setName(""); // NOI18N

        jLabel1.setText("Paciente:");

        lblValidaConsultaMarcada.setText("Você ainda não possui nenhuma consulta agendada!");

        jLabel3.setText("Data Consulta:");

        lblCartaoAgendamento.setText("Cartão Agendamento:");

        lblCartaoSus.setText("Cartão SUS:");

        btnVoltar.setText("Voltar");
        btnVoltar.setEnabled(false);
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        btnMarcaConsulta.setText("Marcar Consulta");
        btnMarcaConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMarcaConsultaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtNomePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblValidaConsultaMarcada)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCartaoAgendamento)
                                    .addComponent(lblCartaoSus)
                                    .addComponent(jLabel3))
                                .addGap(41, 41, 41)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCartaoAgendamento)
                                    .addComponent(txtCartaoSUS)
                                    .addComponent(dcDataDaConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))))
                        .addContainerGap(178, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnVoltar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMarcaConsulta)
                        .addGap(99, 99, 99))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtNomePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(29, 29, 29)
                .addComponent(lblValidaConsultaMarcada)
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(dcDataDaConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtCartaoSUS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCartaoSus))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnVoltar)
                            .addComponent(btnMarcaConsulta))
                        .addGap(20, 20, 20))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCartaoAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCartaoAgendamento))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("Marcar Consulta", jPanel1);

        lblBoasVindas.setText("lblBoasVindas");

        jLabel7.setText("Paciente:");

        jLabel9.setText("Selecione a Vacina:");

        cbVacinas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbVacinasActionPerformed(evt);
            }
        });

        btnConcluiPrescriscao.setText("Concluir");
        btnConcluiPrescriscao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConcluiPrescriscaoActionPerformed(evt);
            }
        });

        btnAdicionaVacina.setText("Adicionar Vacina");
        btnAdicionaVacina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionaVacinaActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(lstVacinasPreescritas);

        jLabel6.setText("Vacinas Preescritas:");

        btnVoltar1.setText("Voltar");
        btnVoltar1.setEnabled(false);
        btnVoltar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltar1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome Vacina:");

        txtNomeVacina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeVacinaActionPerformed(evt);
            }
        });

        jLabel13.setText("jLabel13");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnVoltar1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnConcluiPrescriscao)
                        .addGap(28, 28, 28))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBoasVindas)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9))
                                .addGap(33, 33, 33)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbVacinas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(72, 72, 72)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(btnAdicionaVacina)
                                    .addComponent(jLabel13)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(148, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNomeVacina, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblBoasVindas)
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel4)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cbVacinas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionaVacina))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNomeVacina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConcluiPrescriscao)
                    .addComponent(btnVoltar1))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Área Médica", jPanel2);

        jLabel10.setText("jLabel10");

        jLabel11.setText("Paciente:");

        jLabel12.setText("Vacinas Preescritas:");

        btnAplicarVacina.setText("Aplicar Vacina");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vacina", "Dose ", "Aplicado?"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable1);

        jLabel8.setText("Idade do Paciente: ");

        lblIdaide.setText("Idade");

        jLabel14.setText("jLabel14");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(cbPaciente2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel14))
                            .addComponent(jLabel10))
                        .addContainerGap(193, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblIdaide))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAplicarVacina)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cbPaciente2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(9, 9, 9)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lblIdaide))
                .addGap(23, 23, 23)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAplicarVacina)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Área Enfermaria", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMarcaConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMarcaConsultaActionPerformed
        boolean marcado = marcaConsulta(pp);
        if (marcado) {
            optionPane.showMessageDialog(null, "Consulta agendada com sucesso!");
            bloqueiaCampos();
        } else {
            optionPane.showMessageDialog(null, "Problema ao agendar sua consulta, tente novamente mais tarde!");
        }
    }//GEN-LAST:event_btnMarcaConsultaActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed

        TelaLOgin x = new TelaLOgin(pMemoria, consMemoria);
        x.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnVoltar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltar1ActionPerformed
        TelaLOgin x = new TelaLOgin(pMemoria, consMemoria);
        x.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnVoltar1ActionPerformed

    DefaultListModel<String> model = new DefaultListModel<>();

    private void btnAdicionaVacinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionaVacinaActionPerformed

        // Selecione
        lstVacinasPreescritas.setModel(model);
        if (!Objects.equals(cbVacinas.getSelectedItem().toString().toUpperCase(), "SELECIONE")) {
            if (Objects.equals(cbVacinas.getSelectedItem().toString().toUpperCase(), "OUTRA")) {
                preencheViaTexto();
            } else {
                // ficari mais bonito se tivesse uma validação se já existe no combo, mas a preguiça venceu
                model.addElement(cbVacinas.getSelectedItem().toString());// pegar a selecao do combo
            }
        } else {
            jLabel2.setVisible(false);
            txtNomeVacina.setVisible(false);
            btnAdicionaVacina.setEnabled(false);
        }
    }//GEN-LAST:event_btnAdicionaVacinaActionPerformed

    private void cbVacinasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbVacinasActionPerformed

        if (!Objects.equals(cbVacinas.getSelectedItem().toString().toUpperCase(), "SELECIONE")) {
            if (Objects.equals(cbVacinas.getSelectedItem().toString().toUpperCase(), "OUTRA")) {
                jLabel2.setVisible(true);
                txtNomeVacina.setVisible(true);
            } else {
                btnAdicionaVacina.setEnabled(true);
            }
        } else {
            jLabel2.setVisible(false);
            txtNomeVacina.setVisible(false);
            btnAdicionaVacina.setEnabled(false);
        }
    }//GEN-LAST:event_cbVacinasActionPerformed

    private void txtNomeVacinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeVacinaActionPerformed
//        if (txtNomeVacina.ge) {
//            boolean 
//        }
//        value = !txtNomeVacina.getText().trim().isEmpty();
//        btnAdicionaVacina.setEnabled(value);
    }//GEN-LAST:event_txtNomeVacinaActionPerformed

    private void btnConcluiPrescriscaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConcluiPrescriscaoActionPerformed

        //
        ArrayList<String> xpto = new ArrayList<>();
        if (lstVacinasPreescritas.getModel().getSize() > 0) {
            for (int i = 0; i < lstVacinasPreescritas.getModel().getSize(); i++) {

                Object item = lstVacinasPreescritas.getModel().getElementAt(i);
                xpto.add(item.toString());
            }

        } else {
            optionPane.showMessageDialog(null, "Necessário incluir ao menos uma vacina!");
        }

        // validar se populou
        //if (consMemoria.getVacinas())
        consMemoria.setVacinas(xpto);
        pMemoria = consMemoria.getPaciente();
        btnVoltar1.setEnabled(true);
        btnConcluiPrescriscao.setEnabled(false);
        optionPane.showMessageDialog(null, "Vacinas prescritas com sucesso!");


    }//GEN-LAST:event_btnConcluiPrescriscaoActionPerformed

    private void preencheViaTexto() {

        if (!txtNomeVacina.getText().trim().isEmpty()) {
            model.addElement(txtNomeVacina.getText());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AreaOperacional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AreaOperacional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AreaOperacional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AreaOperacional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AreaOperacional().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionaVacina;
    private javax.swing.JButton btnAplicarVacina;
    private javax.swing.JButton btnConcluiPrescriscao;
    private javax.swing.JButton btnMarcaConsulta;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JButton btnVoltar1;
    private javax.swing.JComboBox<String> cbPaciente;
    private javax.swing.JComboBox<String> cbPaciente2;
    private javax.swing.JComboBox<String> cbVacinas;
    private com.toedter.calendar.JDateChooser dcDataDaConsulta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblBoasVindas;
    private javax.swing.JLabel lblCartaoAgendamento;
    private javax.swing.JLabel lblCartaoSus;
    private javax.swing.JLabel lblIdaide;
    private javax.swing.JLabel lblValidaConsultaMarcada;
    private javax.swing.JList<String> lstVacinasPreescritas;
    private javax.swing.JTextField txtCartaoAgendamento;
    private javax.swing.JTextField txtCartaoSUS;
    private javax.swing.JTextField txtNomePaciente;
    private javax.swing.JTextField txtNomeVacina;
    // End of variables declaration//GEN-END:variables

    public boolean marcaConsulta(Pessoa p) {

        if (validaCampos()) {

            try {
                Calendar cal = Calendar.getInstance();
                Date dataConsulta = dcDataDaConsulta.getDate();
                cal.setTime(dataConsulta);

                Consulta consulta = new Consulta();
                Paciente pac = new Paciente(p.getNome(), p.getIdade(), p.getCpf(), p.geteMail(), p.getLogin(),
                        p.getSenha(), p.getEndereco(), txtCartaoAgendamento.getText(),
                        Integer.parseInt(txtCartaoSUS.getText()));

                pMemoria = pac;

                // Medico-- além dos dados da pessoa, passo os exclusivos de medico
                Medico m1 = new Medico(
                        "medico teste", 29, 404882, "pedrogaudio@live.com", "medico", "1234", new Endereco("Rua Teste",
                                "XPTO", 12, "Bairro Teste", "Estado Teste", "Cidade Teste", "04052030"),
                        1234, "Procto", false);

                // Enfermeira-- além dos dados da pessoa, passo os exclusivos de enfermeira
                Enfermeira e1 = new Enfermeira("enfemeira teste", 29, 404882, "pedrogaudio@live.com", "enfermeira",
                        "1234", new Endereco("Rua Teste", "XPTO", 12, "Bairro Teste", "Estado Teste", "Cidade Teste",
                                "04052030"),
                        666);

                Data dc = new Data();

                dc.setAno(cal.YEAR);
                dc.setMes(cal.MONTH);
                dc.setDia(cal.DAY_OF_MONTH);

                consulta.setMedico(m1);
                consulta.setPaciente(pac);
                consulta.setEnfermeira(e1);
                consulta.setData(dc);

                consMemoria = consulta;

                return true;

            } catch (Exception ex) {
                return false;
            }

        } else {
            return false;
        }
    }

    public boolean validaCampos() {
        Calendar cal = Calendar.getInstance();
        Date dataConsulta = dcDataDaConsulta.getDate();
        boolean ok = true;
        String message = "";

        if (dataConsulta == null) {
            message = "Necessário preencher uma data";

            ok = false;
        } else {
            cal.setTime(dataConsulta);
            if (cal.get(Calendar.DAY_OF_WEEK) == 1 || cal.get(Calendar.DAY_OF_WEEK) == 7) {
                message = message + ", " + "Não trabalhamos aos finais de semana!";
                ok = false;
            }
        }

        if (txtCartaoAgendamento.getText().isEmpty()) {
            message = message + ", " + "Necessário informar o número do cartão de agendamento!";
            ok = false;
        }

        if (txtCartaoSUS.getText().isEmpty() || !validaSomenteNumero(txtCartaoSUS.getText())) {
            message = message + ", " + "Necessário informar o número do cartão do SUS. Somente números!";
            ok = false;
        }

        if (!ok) {
            optionPane.showMessageDialog(null, message);
        }

        return ok;

    }

    public boolean validaSomenteNumero(String texto) {

        if (texto == null) {
            return false;
        }
        try {
            int d = Integer.parseInt(texto);
        } catch (NumberFormatException nfe) {
            return false;
        }
        return true;
    }

    public void bloqueiaCampos() {
        dcDataDaConsulta.setEnabled(false);
        txtCartaoAgendamento.setEnabled(false);
        txtCartaoSUS.setEnabled(false);
        btnMarcaConsulta.setEnabled(false);

        btnVoltar.setEnabled(true);
    }

    public void inicializaComponentes(int perfil, Pessoa p, Consulta c) {
        // paciente
        switch (perfil) {
            // medico
            case 0:
                boolean podeMarcar = false;
                // se for paciente, abro os campos para marcar uma consulta
                // tabbedPane.setEnabledAt(0, true);
                jTabbedPane1.setEnabledAt(1, false);
                jTabbedPane1.setEnabledAt(2, false);
                jTabbedPane1.setSelectedIndex(0);
                dcDataDaConsulta.setEnabled(false);
                btnMarcaConsulta.setEnabled(false);
                lblCartaoSus.setVisible(false);
                lblCartaoAgendamento.setVisible(false);
                txtCartaoAgendamento.setVisible(false);
                txtCartaoSUS.setVisible(false);
                txtCartaoAgendamento.setEnabled(false);
                txtCartaoSUS.setEnabled(false);
                txtNomePaciente.setText(p.getNome());
                lblValidaConsultaMarcada.setVisible(false);
                //			// validar se o paciente tem consulta marcada
//			Paciente pac = new Paciente(String nome, int idade, int cpf, String eMail, String login, String senha, Endereco endereco,
//			String cartaoDeAgendamento, int cartaoDoSus);
                podeMarcar = true;
                if (podeMarcar) {

                    dcDataDaConsulta.setEnabled(true);
                    btnMarcaConsulta.setEnabled(true);
                    lblCartaoSus.setVisible(true);
                    lblCartaoAgendamento.setVisible(true);
                    txtCartaoAgendamento.setVisible(true);
                    txtCartaoSUS.setVisible(true);
                    txtCartaoAgendamento.setEnabled(true);
                    txtCartaoSUS.setEnabled(true);
                }
                break;
            // enfermeira
            case 1:
                // tabbedPane.setEnabledAt(1, true);
                jTabbedPane1.setEnabledAt(0, false);
                jTabbedPane1.setEnabledAt(2, false);
                jTabbedPane1.setSelectedIndex(1);
                carregaDadosMedico(p, c);
                break;
            default:
                // tabbedPane.setEnabledAt(2, true);
                jTabbedPane1.setEnabledAt(0, false);
                jTabbedPane1.setEnabledAt(1, false);
                jTabbedPane1.setSelectedIndex(2);
                carregaDadosEnfermeira(p, c);
                break;
        }
    }

    public void carregaDadosMedico(Pessoa p, Consulta c) {
        lblBoasVindas.setText("Bem vindo " + p.getNome());
        jLabel13.setText("Cartão do SUS: " + c.getPaciente().getCartaoDoSus());

        jLabel2.setVisible(false);
        txtNomeVacina.setVisible(false);

        btnAdicionaVacina.setEnabled(false);

        // popular com os pacientes cadastrados:
        //populaPacientes();
        //cbPaciente
        // popular com a lista de vacinas
        // cbVacinas
        populaVacinas();
        //se o viado selecionar Outras habilitar o campo txtNomeVacina

        //btnAdicionaVacina 
        // responsavel por vincular uma vacina a um paciente
        //carregará os dados incluidos pelo médico
        //lstVacinasPreescritas 
    }

    public void carregaDadosEnfermeira(Pessoa p, Consulta c) {
        jLabel10.setText("Bem vindo " + p.getNome());
        jLabel14.setText("Cartão do SUS: " + c.getPaciente().getCartaoDoSus());
        lblIdaide.setText(String.valueOf(c.getPaciente().getIdade()));
        Enfermeira e = new Enfermeira();
        //  jTable1
        ArrayList<String> vacinasPrescritas = c.getVacinas();

        DefaultTableModel m = (DefaultTableModel) jTable1.getModel();
        Object rowData[] = new Object[3];

        for (int i = 0; i < vacinasPrescritas.size(); i++) {
            rowData[0] = vacinasPrescritas.get(i);
            rowData[1] = e.aplicaVacina("vacina " + vacinasPrescritas.get(i), Integer.parseInt(lblIdaide.getText()));
            rowData[2] = false;
            m.addRow(rowData);
        }
    }

    public void populaPacientes(Paciente pac, int perfil) {

        List<String> pacientes = new ArrayList<>();

        pacientes.add(pac.getNome());
        if (perfil == 1) {
            cbPaciente.setModel(new DefaultComboBoxModel<>(pacientes.toArray(new String[0])));
        } else {
            cbPaciente2.setModel(new DefaultComboBoxModel<>(pacientes.toArray(new String[0])));
        }
    }

    public void populaVacinas() {
        List<String> vacinas = new ArrayList<>();
        vacinas.add("Selecione");
        vacinas.add("Sarampo");
        vacinas.add("H1N1");
        vacinas.add("Meningite");
        vacinas.add("Malária");
        vacinas.add("Covid19");
        vacinas.add("Outra");
        cbVacinas.setModel(new DefaultComboBoxModel<>(vacinas.toArray(new String[0])));
    }
}
